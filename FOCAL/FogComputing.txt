Capas
	- N0: electrónica básica
		- Sensor tradicional
		- Motores y servos
		- Actuadores 
		- Transductores, de forma genérica
		- Resistencias, leds, relés, etc

	- N1: MCUs: Arduino, ESP, FPGA, etc
		- Soporte inteligente para conectar elementos de N0
		- Convierte la electrónica tradicional (N0) en smart objects
		- Cableados
		- Inalambricos, comunicaciones ligeras, con poco consumo y baja tasa de transferencia
		- Publicación/suscripción de servicios (MQTT)
		- Comunicaciones encriptadas
		- Aplicar la máxima seguridad posible en todos los procesos.
		- Usar multiproceso, preferiblemente un RTOS, donde se aseguren los tiempos de respuesta.
		- Asignar prioridades a procesos y sensores
		- autodescubrimiento de servicios
		- Hardware proof of trust (buscar cómo)
		- Cache local en memoria / EEPROM para eventos importantes
		- Ver cómo subir la caché y dar la fecha de captura
		- Multifabricante, multiprotocolo
		- Envío de datos en JSON (buscar un standard)(consultar schema.org)
		- NO transforma datos, los envía tal cual.
		- Comportamiento simple: envía datos (publicación) y recibe datos/instrucciones (suscripción)
		- El consumo eléctrico debe ser muy cuidadoso. Funcionará a baterías o con pequeños paneles solares.
		- Debe poder recibir actualizaciones del juego de instrucciones/lógica. 
		- BBDD de sensores online. Descarga y caché de lo que tenga conectado directamente.
	- N2: Edge gateway: Raspberry Pi, etc
		- Ethernet y WIFI, LORA, etc. Pueden usar comunicaciones más potentes al tener fuente de alimentación permanente.
		- Sensores cableados directament en instalaciones más simples, uniendo N0 y N2 en N20. En ese caso habrá un N1 "virtual" integrado
		- MQTT para orquestación del Edge. 
		- Sistema distribuido. Buscar uno y adaptarlo o fabricar uno nuevo. Es la base del Fog computing. Seguir los 8 pilares
			- Beowulf?
			- 
		- Flow MQTT diseñado más arriba y transferido por un orquestador
		- Desde el orquestador se desplegará la lógica hacia el N1.
		- N2 podrá tener varias "plantillas" para N1 y cambiar entre una y otra según condiciones.
		- Plugins de conversión.
			- Entre protocolos de comunicaciones
			- Entre formatos de datos
			- Entre fabricantes
			- BBDD de plugins y especificaciones
		- Funciones avanzadas
			- Almacenamiento temporal. Circular? Quotas y espacios privados para N1
				- Encriptación
				- Compresión
				- Descarga adelantada
			- Toma de decisiones básica, basadas en flow MQTT. Cambio de flows y lógica para N2 y N1
			- Reglas de seguridad fuertes
				- inventario/autorización, basadas en Blockchain (usando N3)
				- métricas de comportamiento y detección de anomalías (usando servicios N3 para ello)
			- Integración multicloud
			- Proxy de N1 con blockchain, para evitar encriptación fuerte en N1
		- Monitorización de estado y "comportamiento" de N1 y N2
		- Web de monitorización y gestión. Servicios REST/API para integración con monitorización en N3.
		- Publicación/suscripción de servicios hacia N1 y hacia N3
		- sistema de descubrimiento de servicios. BBDD de servicios para N1 y N2
		- Organización distribuida con servicios replicados. 
		- Mayor consumo eléctrico. Puede ir con baterías más grandes. panel solar recargable, conexión eléctrica.
	- N3: Nodos intermedios: PCs y servidores edge
		- Recursos ampliados, mismas características de N2
			- Computación
			- Almacenamiento
			- Ancho de banda hacia la nube
		- Orquestación del edge mediante despliegues de flows MQTT. 
		- Monitorización avanzada, integrando la que realiza N2.
		- Reglas de seguridad, equiparables con N2.
		- Nodo blockchain o comunicación con la cadena 
		- Organización en clústers HA
		- Son nodos dentro del mismo Fog que N2, mismo sistema distribuido, pero ofreciendo servicios avanzados.
		- Diferencia entre N2 y N3 solo en la capacidad de sus servicios y capacidades de CPU y comunicaciones.
	- N4: Cloud
		- Analítica de datos
		- Visualización de datos
		- Reglas de orquestación
		- Reglas de seguridad
		- Registro de dispositivos, recursos y servicios
	
Clasificación de dispositivos
     +-------------+-----------------------+-------------------------+
     | Name        | data size (e.g., RAM) | code size (e.g., Flash) |
     +-------------+-----------------------+-------------------------+
     | Class 0, C0 | << 10 KiB             | << 100 KiB              |
     |             |                       |                         |
     | Class 1, C1 | ~ 10 KiB              | ~ 100 KiB               |
     |             |                       |                         |
     | Class 2, C2 | ~ 50 KiB              | ~ 250 KiB               |
     +-------------+-----------------------+-------------------------+

        Table 1: Classes of Constrained Devices (KiB = 1024 bytes)

   +------+------------------------------+-----------------------------+
   | Name | Type of energy limitation    | Example Power Source        |
   +------+------------------------------+-----------------------------+
   | E0   | Event energy-limited         | Event-based harvesting      |
   |      |                              |                             |
   | E1   | Period energy-limited        | Battery that is             |
   |      |                              | periodically recharged or   |
   |      |                              | replaced                    |
   |      |                              |                             |
   | E2   | Lifetime energy-limited      | Non-replaceable primary     |
   |      |                              | battery                     |
   |      |                              |                             |
   | E9   | No direct quantitative       | Mains-powered               |
   |      | limitations to available     |                             |
   |      | energy                       |                             |
   +------+------------------------------+-----------------------------+

                   Table 3: Classes of Energy Limitation
				   
   +------+--------------+---------------------------------------------+
   | Name | Strategy     | Ability to communicate                      |
   +------+--------------+---------------------------------------------+
   | P0   | Normally-off | Reattach when required                      |
   |      |              |                                             |
   | P1   | Low-power    | Appears connected, perhaps with high        |
   |      |              | latency                                     |
   |      |              |                                             |
   | P9   | Always-on    | Always connected                            |
   +------+--------------+---------------------------------------------+

           Table 4: Strategies of Using Power for Communication

CBOR - COAP - UDP - IPV6 - IEEE802.15.4

(1) Availability of memory —C0: << 10 KiB data size (e.g., RAM), << 100 KiB code size (e.g., Flash) —C1: appx. 10 KiB data size (e.g., RAM), 100 KiB code size (e.g., Flash) —C2: appx. 50 KiB data size (e.g., RAM), 250 KiB code size (e.g., Flash)
(2) Availability of energy —E0: Event energy-limited (e.g., Event-based harvesting ) —E1: Period energy-limited (e.g., Battery that is periodically recharged or re- placed)
—E2: Lifetime energy-limited (e.g., Non-replaceable primary battery) —E9: No direct quantitative limitations to available energy (e.g, Mains-powered)
(3) Availability of communication —P0: Normally-off (Reattach when required) —P1: Low-power (Appears connected, perhaps with high) —P9: Always-on (Always connected)
However,		   